class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        int left =0;
        int right = 1;
        while(right<nums.length){
            if ((nums[left]==nums[right])&& (Math.abs(left-right)<=k)){
                return true;
            }
            else if(right== nums.length-1){
                left++;
                right=left+1;
            }
            else {
                right++;
            }
        }
        return false;

    }
}

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap <Integer,Integer> mappy = new HashMap<>();
        for(int i =0; i<nums.length;i++){
            if (mappy.containsKey(nums[i]) && Math.abs(i - mappy.get(nums[i])) <= k){
                return true;
            }
            else{
                mappy.put(nums[i],i);
            } 
        }
        return false;

    }
}

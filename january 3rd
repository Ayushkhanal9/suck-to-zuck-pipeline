class Solution {
    public boolean checkIfPangram(String sentence) {
        Set<Character> letters = new HashSet<>();
        String lowerCase = sentence.toLowerCase();
        for(char c: lowerCase.toCharArray()){
            if(Character.isLetter(c)){
                letters.add(c);
            }
        }
        if (letters.size()>=26){
            return true;
        }else{
            return false;
        }

    }
}

class Solution {
    public int missingNumber(int[] nums) {
        Arrays.sort(nums);
        for(int i=0; i<nums.length;i++){
            if(i !=nums[i]){
                return i;
            }
        }return(nums.length);
    }
}

class Solution {
    public int countElements(int[] arr) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i = 0; i < arr.length; i++) {
            map.merge(arr[i], 1, Integer::sum);
        }
        
        int count = 0;
        for(int i = 0; i < arr.length; i++) {
            if(map.containsKey(arr[i] + 1)) {
                count++;
            }
        }
        return count;
    }
}

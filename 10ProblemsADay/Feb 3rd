class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> mappy= new HashMap<>();
        for(int i=0; i<nums.length; i++){
            int remainder = target-nums[i];
            if (mappy.containsKey(remainder)){
                return new int[] {i,mappy.get(remainder)};
            }
            mappy.put(nums[i], i);
        }
        return new int[] {};
    }
}
class Solution {
    public int searchInsert(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        } return low;
    }
}

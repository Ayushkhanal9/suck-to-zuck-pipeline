class Solution {
    public int[] smallerNumbersThanCurrent(int[] nums) {
        int[] list = new int[nums.length];
        int[] list2 = nums.clone();
        Arrays.sort(list2);
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0; i<nums.length; i++){
            map.putIfAbsent(list2[i],i);
        }
        for(int i=0; i<nums.length; i++){
            list[i]=map.get(nums[i]);
        }
        return list;
    }
}
class Solution {
    public int minTimeToVisitAllPoints(int[][] points) {
        int counter =0;
        for(int i =0 ; i<points.length-1; i++){
            int x1 = points[i][0], x2 = points[i+1][0];
            int y1 = points[i][1], y2 = points[i+1][1];
            int xDif = Math.abs(x2-x1);
            int yDif= Math.abs(y2-y1);
            counter+= Math.max(xDif,yDif);
        }
        return counter;

    }
}
